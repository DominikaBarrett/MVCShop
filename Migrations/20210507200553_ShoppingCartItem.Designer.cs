// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sklep.Models;

namespace Sklep.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210507200553_ShoppingCartItem")]
    partial class ShoppingCartItem
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Sklep.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Tablet"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Telefon"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Watch"
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "Vehicle"
                        },
                        new
                        {
                            CategoryId = 5,
                            CategoryName = "Surprise"
                        });
                });

            modelBuilder.Entity("Sklep.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgThumbnailUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsInStock")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOnSale")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit,  +\r\n                sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n                Ut enim ad minim veniam, quis nostrud exercitation \r\n                ullamco laboris nisi ut aliquip ex ea commodo consequat.",
                            ImageUrl = "\\img\\ipad.jpg",
                            ImgThumbnailUrl = "\\img\\ipad.jpg",
                            IsInStock = true,
                            IsOnSale = true,
                            Name = "IPad",
                            Price = 499.99m
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 2,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit,  +\r\n                sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n                Ut enim ad minim veniam, quis nostrud exercitation \r\n                ullamco laboris nisi ut aliquip ex ea commodo consequat.",
                            ImageUrl = "\\img\\iphone.jpg",
                            ImgThumbnailUrl = "\\img\\iphone.jpg",
                            IsInStock = true,
                            IsOnSale = true,
                            Name = "IPhone",
                            Price = 499.99m
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 3,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit,  +\r\n                sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n                Ut enim ad minim veniam, quis nostrud exercitation \r\n                ullamco laboris nisi ut aliquip ex ea commodo consequat.",
                            ImageUrl = "\\img\\watch.jpg",
                            ImgThumbnailUrl = "\\img\\watch.jpg",
                            IsInStock = true,
                            IsOnSale = false,
                            Name = "Smart watch",
                            Price = 499.99m
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 4,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit,  +\r\n                sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n                Ut enim ad minim veniam, quis nostrud exercitation \r\n                ullamco laboris nisi ut aliquip ex ea commodo consequat.",
                            ImageUrl = "\\img\\Quad.jpg",
                            ImgThumbnailUrl = "\\img\\watch.jpg",
                            IsInStock = true,
                            IsOnSale = false,
                            Name = "Vehicle",
                            Price = 499.99m
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 5,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit,  +\r\n                sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n                Ut enim ad minim veniam, quis nostrud exercitation \r\n                ullamco laboris nisi ut aliquip ex ea commodo consequat.",
                            ImageUrl = "\\img\\apple.jpg",
                            ImgThumbnailUrl = "\\img\\watch.jpg",
                            IsInStock = true,
                            IsOnSale = true,
                            Name = "Surprise",
                            Price = 499.99m
                        });
                });

            modelBuilder.Entity("Sklep.Models.ShoppingCartItem", b =>
                {
                    b.Property<int>("ShoppingCartItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("ShoppingCartId")
                        .HasColumnType("int");

                    b.HasKey("ShoppingCartItemId");

                    b.HasIndex("ProductId");

                    b.ToTable("ShoppingCartItems");
                });

            modelBuilder.Entity("Sklep.Models.Product", b =>
                {
                    b.HasOne("Sklep.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Sklep.Models.ShoppingCartItem", b =>
                {
                    b.HasOne("Sklep.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Sklep.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
